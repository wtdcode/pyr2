# Modified from https://github.com/unicorn-engine/unicorn/blob/198e432a1d7edbed6f4726acc42c50c3a4141b6b/.github/workflows/python-publish.yml

name: PyPI ðŸ“¦ Distribution

on: [push]

jobs:
  generate:
    runs-on: ubuntu-20.04
    steps:
    - name: Set up python and libclang.
      run: sudo apt update && sudo apt install python3 python3-pip libclang-11-dev -y
    
    - name: Set up (a specific version) ctypeslib.
      run: python3 -m pip install https://github.com/trolldbois/ctypeslib/archive/15dd04bec1a7eb28ed93e5954d304a4558f0300e.zip
    
    - name: Checkout the repo.
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Install meson
      run: python3 -m pip install setuptools wheel meson
    
    - name: Build radare2
      run: python3 setup.py bdist_wheel
    
    - name: Generate bindings
      run: cd tools && python3 gen.py -O ../r2/ -B ../radare2/pyr2installdir/ && cd ..
    
    - name: Commit new bindings
      run: git status | grep -q "changes"  && git add r2/ && git commit -m "Bindings generated on `date`"

    - name: Push new bindings
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.BINDINGS_DEPLOY_KEY }}
  
  build:
    needs: [generate]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        platform: [x64]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Setup Ninja
      if: matrix.os != 'windows-latest'
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set up MSVC
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1

    - name: Set up MSVC CMD x86_64
      if: matrix.os == 'windows-latest' && matrix.platform == 'x64'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    
    - name: Set up MSVC CMD x86
      if: matrix.os == 'windows-latest' && matrix.platform == 'x32'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: Install dependencies
      run: |
        pip install setuptools wheel meson

    - name: Remove link.exe to avoid conflicts and Build distribution ðŸ“¦ on Windows
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
          del /f "C:\Program Files\Git\mingw64\bin\link.exe"
          python setup.py bdist_wheel
      
    - name: Build distribution ðŸ“¦
      if: matrix.os != 'windows-latest'
      shell: bash
      run: |
          python setup.py bdist_wheel
  
    - uses: actions/upload-artifact@v2
      with:
         path: ${{ github.workspace }}/dist/*

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_pass }}
