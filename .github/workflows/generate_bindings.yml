name: Generate Bindings and Run tests ðŸš€

on:
  push:
    paths-ignore:
      - "r2/**"
    branches:
      - "*"

jobs:
  generate:
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/head')
    steps:
    - name: Set up system path for python libs.
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Set up python and libclang.
      run: sudo apt update && sudo apt install python3 python3-pip libclang-11-dev -y
    
    - name: Set up (a specific version) ctypeslib.
      run: python3 -m pip install https://github.com/trolldbois/ctypeslib/archive/15dd04bec1a7eb28ed93e5954d304a4558f0300e.zip
    
    - name: Checkout the repo.
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Install meson
      run: python3 -m pip install setuptools wheel meson
    
    - name: Clone latest radare2
      run: git clone https://github.com/radareorg/radare2

    - name: Build radare2
      run: env BINDING=1 python3 setup.py build
    
    - name: Generate bindings
      run: cd tools && python3 gen.py -O ../r2/ -B ../radare2/pyr2installdir/ && cd ..

    - name: Test bindings
      run: python3 -m pip install -e . && cd tests && python3 test_rapi.py
    
    - name: Set up git.
      run: git config --global user.email mio@lazym.io && git config --global user.name action

    - name: Commit new bindings
      run: git status | grep -q "changes"  && git add -u && git commit -m "Bindings generated on `date`"

    - name: Push new bindings
      run: mkdir -p ~/.ssh && echo "$BINDINGS_DEPLOY_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && ssh-keyscan github.com >> ~/.ssh/known_hosts && git remote add orig git@github.com:wtdcode/pyr2.git && git push orig
      env:
        BINDINGS_DEPLOY_KEY: ${{ secrets.BINDINGS_DEPLOY_KEY }}

  test:
    needs: [generate]
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/head')
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        platform: [x64]
    steps:
    - name: Set up system path for python libs.
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set up MSVC
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1

    - name: Set up MSVC CMD x86_64
      if: matrix.os == 'windows-latest' && matrix.platform == 'x64'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    
    - name: Set up MSVC CMD x86
      if: matrix.os == 'windows-latest' && matrix.platform == 'x32'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: Install dependencies
      run: python3 -m pip install setuptools wheel meson

    - name: Clone latest radare2 and update ourselves
      run: git clone https://github.com/radareorg/radare2 && git pull

    - name: Remove link.exe to avoid conflicts and Build distribution ðŸ“¦ on Windows
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: del /f "C:\Program Files\Git\mingw64\bin\link.exe"
    
    - name: Test our build
      run: python3 -m pip install -e . && cd tests && python3 test_rapi.py